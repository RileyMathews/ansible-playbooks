---
- name: install nginx/certbot dependencies
  apt:
    name:
      - curl
      - gnupg2
      - debian-archive-keyring
    state: present
    update_cache: yes

- name: Add the official Nginx repository key
  apt_key:
    url: https://nginx.org/keys/nginx_signing.key
    state: present

- name: Add the official Nginx repository to sources list
  apt_repository:
    repo: "deb https://nginx.org/packages/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release }} nginx"
    state: present

- name: Install Nginx from the official repository
  apt:
    name: nginx
    state: present
    update_cache: true

- name: Ensure systemd override directory for nginx exists
  ansible.builtin.file:
    path: /etc/systemd/system/nginx.service.d
    state: directory
    mode: '0755'

- name: Create systemd override for nginx to wait for tailscale
  ansible.builtin.copy:
    dest: /etc/systemd/system/nginx.service.d/override.conf
    content: |
      [Unit]
      After=tailscaled.service
      Wants=tailscaled.service
    mode: '0644'
    owner: root
    group: root
  notify:
    - restart_systemd
    - restart_nginx

- name: Copy nginx conf file
  ansible.builtin.copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
  notify: reload_nginx

- name: Create sites-available directory
  ansible.builtin.file:
    path: /etc/nginx/sites-available
    state: directory

- name: Create site available files
  ansible.builtin.template:
    src: site.conf.j2
    dest: "/etc/nginx/sites-available/{{ item.name }}.conf"
    owner: root
    group: root
    mode: '0644'
  loop: "{{ available_sites }}"
  notify: reload_nginx
  vars:
    listen_host: "{{ item.listen_host }}"
    backend_host: "{{ item.backend_host }}"

- name: Start nginx
  ansible.builtin.systemd:
    name: nginx
    state: started
    enabled: true

